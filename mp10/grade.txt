Compilation Results:
********************

load_tuples test: 10 pts total
Test 1: load tuple
+5: load_tuples: m,n,nnz match
values in node does not match

gv_tuples test: 6 pts total
Test 2: gv

set_tuples test: 44 pts total
Test 3-0: set
values in node does not match
Test 3-1: set
+6: set_tuples: add node at head
Test 3-2: set
+6: set_tuples: add node in the middle
Test 3-3: set
+6: set_tuples: add node at tail
Test 3-4: set
values in node does not match
Test 3-5: set
values in node does not match
Test 3-6: set
num of nodes don't match

add_tuples test: 15 pts total
Test 4: add
 values in node does not match

save_tuples test: 10 pts total
Test 6: save
testing save_tuples, saving to save_test_tuples.txt

Printing diff of save tuples. If empty, 10 pts
diff: grade/save_test_tuples.txt: No such file or directory

0
destroy_tuples test: 5 pts total
Printing valgrind output. If no memory leaks/errors, 5 pts
==53233== Memcheck, a memory error detector
==53233== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==53233== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==53233== Command: ./test0 7
==53233== 
==53233== Invalid read of size 8
==53233==    at 0x401E85: add_tuples (sparsemat.c:243)
==53233==    by 0x401431: main (test0.c:456)
==53233==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==53233== 
==53233== 
==53233== Process terminating with default action of signal 11 (SIGSEGV)
==53233==  Access not within mapped region at address 0x0
==53233==    at 0x401E85: add_tuples (sparsemat.c:243)
==53233==    by 0x401431: main (test0.c:456)
==53233==  If you believe this happened as a result of a stack
==53233==  overflow in your program's main thread (unlikely but
==53233==  possible), you can try to increase the size of the
==53233==  main thread stack using the --main-stacksize= flag.
==53233==  The main thread stack size used in this run was 8388608.
==53233== 
==53233== HEAP SUMMARY:
==53233==     in use at exit: 1,512 bytes in 63 blocks
==53233==   total heap usage: 65 allocs, 2 frees, 2,648 bytes allocated
==53233== 
==53233== LEAK SUMMARY:
==53233==    definitely lost: 0 bytes in 0 blocks
==53233==    indirectly lost: 0 bytes in 0 blocks
==53233==      possibly lost: 0 bytes in 0 blocks
==53233==    still reachable: 1,512 bytes in 63 blocks
==53233==         suppressed: 0 bytes in 0 blocks
==53233== Rerun with --leak-check=full to see details of leaked memory
==53233== 
==53233== For lists of detected and suppressed errors, rerun with: -s
==53233== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)

Grade:
******
Late submission: 0
Functionality: 23
Comments and Style: 5
Intro paragraph: 5
Total: 33
